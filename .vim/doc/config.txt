*config.txt*      Description of configuration and plugins of this vim config.

	                by Jan Christoph Ebersbach

==============================================================================

                             Contents                               *config*

1. General Information				|config-information|
2. Plugins					|config-plugin|
    2.1. a					|config-a|
    2.2. Align					|config-align|
    2.3. ConqueTerm				|config-Conque|
    2.4. delimitMate				|config-delimitMate|
    2.5. Diff2qf				|config-Diff2qf|
    2.6. DumbBuf				|config-DumbBuf|
    2.7. Editqf					|config-Editqf|
    2.8. Fastwordcompleter			|config-Fastwordcompleter|
    2.9. FuzzyFinder				|config-FuzzyFinder|
    2.10. gnupg					|config-gnupg|
    2.11. IndentAnything			|config-IndentAnything|
    2.12. LustyExplorer				|config-lustyexplorer|
    2.13. mark					|config-mark|
    2.14. neocomplcache				|config-neocomplcache|
    2.15. NERDCommenter				|config-NERDCommenter|
    2.16. NERDTree				|config-NERDTree|
    2.17. Pydoc					|config-Pydoc|
    2.18. pythonhelper				|config-pythonhelper|
    2.19. qfn					|config-qfn|
    2.20. ragtag				|config-ragtag|
    2.21. repeat				|config-repeat|
    2.22. showmarks				|config-showmarks|
    2.23. speeddating				|config-speeddating|
    2.24. SudoEdit				|config-SudoEdit|
    2.25. Supertab				|config-Supertab|
    2.26. Surround				|config-Surround|
    2.27. taglist				|config-taglist|
    2.28. tasklist				|config-tasklist|
    2.29. toggle				|config-toggle|
    2.30. txtfmt				|config-txtfmt|
    2.31. utl					|config-utl|
    2.32. vcscommand				|config-vcscommand|
    2.33. VisIncr				|config-VisIncr|
    2.34. yankring				|config-yankring|
    2.35. ZoomWin				|config-ZoomWin|
    2.36. vimoutliner				|config-vimoutliner|
3. Filetype Plugins				|config-ftplugin|
    3.1. javascript				|config-javascript|
    3.2. xml					|config-xml|
4. Colorschemes					|config-colorscheme|
    4.1. peaksea				|config-peaksea|
5. Syntax					|config-syntax|
    5.1. asciidoc				|config-asciidoc|
    5.2. bbcode					|config-bbcode|
    5.3. markdown				|config-markdown|
    5.4. txtbrowser				|config-txtbrowser|

==============================================================================

GENERAL INFORMATION				*config-information*

Hello and welcome to my vim configuration. I hope this document will help you
find your way through it. My configuration is under constant improvement. I
try to keep up with the changes at vim.org and always have an eye on the
plugin section to find even better plugins.

Why do I do all this? - Once I figured out the Lisp and Emacs is not my of
editing files and found vim, I decided to stick with it. In fact vim came
extremely easy and just the way I never dared to dream about text editing! -
Want to see what I'm talking about? Have a look at this presentation:
http://vimcasts.org/episodes/modal-editing-undo-redo-and-repeat/

What's next? - My workflow:
I have to admit that a plain vim is sufficient in most situations on remote
systems but for serious editing tasks it's not suite perfectly. The following
things I missed most:

- easy to use file and directory navigation
- fast restoration of a former work environment
- an effective and visually attractive default configuration
- support when editing text by word suggestions and snippets
- little helper tools for various tasks

Fortunately vim provides all this with its plugin system.

TODO: To be continued

In some cases the default vim behavior didn't really fit my needs so I
changed. To not be surprised you should have a look at
<url:~/.vimrc#r=Changes to the default behavior>.

General key binding are found in the section <url:~/.vimrc#r=Keymappings> and
key bindings related to plugin in section |config-plugin|.

Other than that it's highly important to me to provide you a way to include
your own settings without messing them up the upstream with the upstream
changes. At the end of my .vimrc file personal.vim is sourced which may
contain your settings (<url:~/.vimrc#r=Personal settings>). Here is an example
for personal.vim:

	" EmailAddress query program
	let g:emailAddrQueryProg = "~/bin/vcardquery.py --email="

	" Personal settings
	let g:userName      = "Your Surname"
	let g:userGivenName = "Your given name"
	let g:snips_author  = g:userGivenName.' '.g:userName
	let g:userStreet    = "Your street"
	let g:userCity      = "Your city"
	let g:userZip       = "Your zip"
	let g:userAddr      = g:userStreet."\n".g:userZip.' '.g:userCity
	let g:userPhone     = "Tel:.  : Your phone\nMobile : Your mobile"
	let g:userEmail     = "Your e-mail"
	let g:userWWW       = "http://www.example.com/"

	" Snippets directories
	let g:snippets_dir = '$HOME/.vim/snippets/,$HOME/.vim/personal_snippets/'

PLUGINS						*config-plugin*

A number of plugins are shipped with this vim configuration. The following
sections contain a brief overview with useful hints for using them. In
addition links to help files and plugins are completing the overview.

All plugins can be updated automatically via :GetLatestVimScripts. Have a look
<url:../GetLatest/GetLatestVimScripts.dat>.

2.1. a 						*config-a*
						<url:../plugin/a.vim>
Opens alternate header or source code file.
Command: :A	<- jump to alternate file

2.2. |Align| 						*config-align*
Align text in arbitrary ways.
Command: :Align	<STRING>	<- align viually selected text at string

2.3. |ConqueTerm|				*config-Conque*
Open terminal applications in vim.
Command: :ConqueTerm APPLICATIONNAME	<- open terminal application in vim

2.4. |delimitMate|				*config-delimitMate*
Autoclose (), [], {} when opened and leave the braces with pressing ), ], }

2.5. |diff2qf|					*config-Diff2qf*
Load a patch file into quickfix list to make it easily accessible.
Command: :Diff2qf <file>	<- load patch into qf (replace current qf)
	 :Diff2qfAppend <file>	<- load patch into qf (append to current qf)

2.6. |dumbbuf-contents| 			*config-DumbBuf*
Easy to use buffer switch and modifier.
Mapping: <leader>b	<- show DumbBuf to modify or jump to buffer

2.7. |editqf|					*config-Editqf*
Make quickfix list editable.
Command: Write	<- any command executed in the editable qf list will close the
		window and reload the changed list into qf
	 Leave	<- any command that causes the cursor to leave the editable qf
		list will close the window and discard all changes
Mapping: i	<- i pressed in qf window opens qf list in another window

2.8. |fastwordcompleter|			*config-Fastwordcompleter*
Obsoleted by |config-neocomplcache|!
Supports writing by providing autocompletion for words.
Command: :FastWordCompletionStart	<- start word completion
	 :FastWordCompletionStop	<- stop word completion

2.9. |fuzzyfinder|				*config-FuzzyFinder*
Open files from a completion list. FuzzyFinder has been abandonded in favour
of LustyExplorer.
Mapping: <leader>ff	<- open file completion in CWD
	 <leader>FF	<- open file completion in the directory of the current
		 file
	 <leader>fd	<- change current working directory (CWD)
	 <leader>fh	<- open vim help tags

2.10. gnupg 					*config-gnupg*
						<url:../plugin/gnupg.vim>
Adds GnuPG support to vim. Just open encrypted files and edit them like normal
after entering the passphrase.

2.11. |IndentAnything| 				*config-IndentAnything*
Library to make writing indentation scripts easier.

2.12. LustyExplorer				*config-lustyexplorer*
						<url:../plugin/lusty-explorer.vim>
Open files and buffers from a completion list in a separate window.
Mapping: ,b	<- open Buffer explorer
	 ,f	<- open File system explorer
	 ,r	<- open File system explorer from current file's directory
	 <Enter>	<- open the selected match
	 <Esc>	<- cancel
	 <C-c>	<- cancel
	 <C-g>	<- cancel

	 <C-t>	<- open the selected match in a new tab
	 <C-n>	<- select the next match
	 <Tab>	<- select the next match
	 <C-p>	<- select the previous match
	 <S-Tab>	<- select the previous match
	 <C-BS>	<- ascend one directory at prompt
	 <C-h>	<- ascend one directory at prompt
	 <C-w>	<- ascend one directory at prompt
	 <C-u>	<- clear the prompt

Additional shortcuts for the filesystem explorer:

	 <C-r>	<- refresh directory contents
	 <C-a>	<- open all files in the current list
	 <C-e>	<- create a new file with the given name

2.13. |mark.vim|				*config-mark*
Highlight multiple search terms.
Mapping: <leader>m	<- add word under cursor to highlighting

2.14. |neocomplcache|				*config-neocomplcache*
The ultimate completion plugin .. including also a nice snippet functionality.
Snippets are stored in ~/.vim/autoload/neocomplcache/plugin/snippets_complete/
Command: :NeoComplCacheEditSnippets [filetype]	<- Edit snippet of file type
Mapping: <C-j>	<- Expand snippet or jump to element within a snippet

2.15. |NERDCommenterContents|			*config-NERDCommenter*
Un-/comment lines.
Mapping: <leader><space>	<- toggle comment

2.16. |NERDTree-contents|			*config-NERDTree*
A file system explorer.
Command: :NERDTree	<- show NERDTree explorer
Mapping: <leader>e	<- toogle NERDTree explorer

2.17. Pydoc 					*config-Pydoc*
						<url:../plugin/pydoc.vim>
Adds funktionality to display python documentation in vim.
Command: :Pydoc TERM	<- open python documentation for term
Mapping: <leader>pw	<- open python documentation for word under cursor
	 <leader>Pw	<- open python documentation for WORD under cursor

2.18. pythonhelper 				*config-pythonhelper*
						<url:../plugin/pythonhelper.vim>
Helps moving around in Python files with displaying the current function and
class in the status bar.

2.19. |qfn.txt|					*config-qfn*
Create notes in an error list with <leader>n, open the error list with :copen
and jump to the items later on. With :QFNSave the errorlist can be saved to a
file.
Command: :QFNSave FILENAME	<- save errorlist to file
Mapping: <leader>n	<- add note to errorlist

2.20. |ragtag| 					*config-ragtag*
Mappings to help editing XML/HTML based file types.
Mapping: <C-X>=	<- foo<%= ^ %>
	 <C-X>+	<- <%= foo^ %>
	 <C-X>-	<- foo<% ^ %>
	 <C-X>_	<- <% foo^ %>
	 <C-X>'	<- foo<%# ^ %> (mnemonic: ' is a comment in ASP VBS)
	 <C-X>"	<- <%# foo^ %>
	 <C-X><Space>	<- <foo>^</foo>
	 <C-X><CR>	<- <foo>\n^\n</foo>
	 <C-X>/	<- Last HTML tag closed
	 <C-X>!	<- <!DOCTYPE...>/<?xml ...?>
	 <C-X>@	<- <link rel="stylesheet" ...>
	 <C-X>#	<- <meta http-equiv="Content-Type" ... />
	 <C-X>$	<- <script src="/javascripts/^.js"></script>

2.21. repeat 					*config-repeat*
						<url:../plugin/repeat.vim>
Repeat last surround or speeddating command with normal "." mapping.
Mapping: .	<- repeat last surround command

2.22. |showmarks| 				*config-showmarks*
Displays defined marks at the right hand side of the window so that you can
easily jump to them.
Mapping: <leader>mt	<- toggle ShowMarks column

2.23. |speeddating|				*config-speeddating*
Use <c-x> and <c-a> on other formats than decimal numbers, e.g. date and time.
Mapping: <c-a>	<- increase number under cursor
	 <c-x>	<- decrease number under cursor

2.24. |SudoEdit|				*config-SudoEdit*
Read (edit) or write files with sudo.
Command: :SudoEdit FILE	<- edit file with sudo
	 :SudoWrite [FILE]	<- wite file with sudo

2.25. |supertab|				*config-Supertab*
Do all your insert-mode completion with <Tab>.
Mapping: <Tab>	<- do insert mode completion

2.26. |surround|				*config-Surround*
Surround arbitrary text with other text ys|movement|<SURROUNDINGTEXT> or
s<SURROUNDINGTEXT> in visual mode.
Mapping: ys|movement|<SURROUNDINGTEXT>	<- surround movement in visual mode
	 with surrounding text. WARNING: ys is not repeatable via "." use cs
	 instead!
	 s<SURROUNDINGTEXT>	<- surround selected text in visual mode with
	 surrounding text
	 ds|movement|<SURROUNDINGTEXT>	<- deletes surrounding text
	 cs|movement|<SURROUNDINGTEXT>	<- change surrounding text. cs is
	 repeatable with "."

2.27. |taglist.txt|				*config-taglist*
Display tags in currently opened files in a separate window.
Command: :Tlist

2.28. tasklist					*config-tasklist*
						<url:../plugin/tasklist.vim>
Display tasks in file in a separate window, e.g. FIXME, TODO, XXX. The
variable g:tlTokenList contains the list of tokens
<url:../plugin/tasklist.vim#line=119>.
Mapping: <leader>t	<- display tasklist

2.29. toggle					*config-toggle*
						<url:../plugin/toggle.vim>
Toggle boolean values TRUE -> FALSE, off -> on ... and the sign for numbers
-1,+1
Mapping: <Esc>t

2.30. |txtfmt|					*config-txtfmt*
filetype=txtfmt or filetype=FILETYPE.txtfmt

formatting text in vim with foreground and background colors and formats like
italic, bold, underline. use <leader> + text-insert abbraviation to insert the
formatting tokens and use.
Mapping: <leader>i	<- replace i with any other text movement

2.31. |utl|					*config-utl*
Universal text linking plugin.
Mapping: gl	<- follow link under cursor
	 gcc	<- copy link under cursor to clipboard

Examples:
<url:#r=here>	<- takes you to text "id=here"
<url:#tn=here> or <url:#tn=here>	<- jump to the first search occurrence of "here"
<url:#line=15>	<- takes you to line 15
<url:vimscript:COMMAND>	<- execute vim command COMMAND

2.32. |vcscommand-contents|			*config-vcscommand*
General VCS integration
Commands:|:VCSAdd|	<- add currenfile to VCS
	 |:VCSAnnotate|	<- display file annotated with the version it was most
			 recently changed
	 |:VCSBlame|	<- alias |:VCSAnnotate|
	 |:VCSCommit|	<- commit changes in file to VCS
	 |:VCSDelete|	<- delete file from VCS
	 |:VCSDiff|	<- display difference to previous version
	 |:VCSGotoOriginal|	<- jump to original buffer if the current buffer
			 is a scratch buffer generated by other VCS commands
	 |:VCSLog|	<- display commit log information
	 |:VCSRemove|<- alias |:VCSAnnotate|
	 |:VCSRevert|	<- replace file with most recent version of VCS
	 |:VCSReview|	<- display a particular version from VCS in a new buffer
	 |:VCSStatus|	<- display VCS status information about a file
	 |:VCSUpdate|	<- retrieve new version of file from the repository
	 |:VCSVimDiff|	<- use |vimdiff| to display diff

2.33. |visincr|					*config-VisIncr*
Produce increasing/decreasing columns of numbers, dates, or daynames.
Command: :I	<- run in |visual-block|-mode on a number of lines

2.34. |yankring|				*config-yankring*
Yankring which contains all cut or copied data.
Mapping: <F8>	<- show the yankring window
	 <ctrl-n> and <ctrl-p>	<- jump to the next/previous item in the ring
				 after paste command (p)

2.35. |zoomwin-usage|				*config-ZoomWin*
Add restore functionality to the |:only| command.
Mapping: <ctrl-w>o	<- press once to switch to only mode and a second time to
			restore the other windows

2.36. |vimoutliner|				*config-vimoutliner*
filetype=vo_base
Filetype extension: .otl

Outliner for vim. A text body belonging to a heading should always be indented
by one tabstop. E.g.

Heading (tabstop 0)
	: Text (tabstop 1)

	Heading 2 (tabstop 1)
	    : Text 2 (tabstop 2)


Text objects:
	 no marker	heading
	 :		body text (wrapping)
	 ;		preformatted body text (non-wrapping)
	 ||		table heading line
	 |		table
	 >		user-defined, text block (wrapping)
	 <		user-defined, preformatted text block (non-wrapping)

Mapping: ,,1	all 	set foldlevel=0
	 aso.
	 ,,0	all 	set foldlevel=99999
	 ,,-	all 	Draw dashed line
	 ,,f	normal	Directory listing of the current directory
	 ,,s	normal	Sort sub-tree under cursor ascending
	 ,,S	normal	Sort sub-tree under cursor descending
	 ,,t	normal	Append timestamp (HH:MM:SS) to heading
	 ,,T	normal	Pre-pend timestamp (HH:MM:SS) to heading
	 ,,t	insert	Insert timestamp (HH:MM:SS) at cursor
	 ,,d	normal	Append datestamp  (YYYY-MM-DD) to heading
	 ,,d	insert	Insert datestamp  (YYYY-MM-DD) at cursor
	 ,,D	normal	Pre-pend datestamp  (YYYY-MM-DD) to heading
	 ,,B	normal	Make body text start with a space
	 ,,b	normal	Make body text start with a colon and space
	 ,,w	insert	Save changes and return to insert mode
	 ,,e	normal	Execute the executable tag line under cursor
	 		|vo-executable-lines|
	 ,,cb	normal	Insert a check box on the current line or each line of the
	 		currently selected range (including lines in selected but
	 		closed folds). This command is currently not aware of body
	 		text. Automatic recalculation of is performed for the entire
	 		root-parent branch that contains the updated child.  (see
	 		,,cz)
	 ,,cx	normal	Toggle check box state (percentage aware)
	 ,,cd	normal	Delete check boxes
	 ,,c%	normal	Create a check box with percentage placeholder except on
	 		childless parents
	 ,,cp	normal	Create a check box with percentage placeholder on all headings
	 ,,cz	normal	Compute completion for the tree below the current heading.

Post processors: A number of post processors exists |vo-post-processors| but
none of these is working well for me.

FILETYPE PLUGINS				*config-ftplugin*

3.1. javascript					*config-javascript*
						<url:../indent/javascript.vim>
JavaScript indentation plugin.

3.2. |xml-plugin.txt|				*config-xml*
Plugin for xml.
Mapping: <LocalLeader>[	<- Delete <![CDATA[ ]]> delimiters
	 <LocalLeader>{	<- Delete <![CDATA[ ]]> section
	 <LocalLeader>]	<- Delete <!-- -->  delimiters
	 <LocalLeader>}	<- Delete <!-- -->  section
	 	    [[	<- Goto to the previous open tag
	 	    [[	<- Goto to the next open tag
	 	    []	<- Goto to the previous close tag
	 	    ][	<- Goto to the next  close tag
	 	    ["	<- Goto to the next  comment
	 	    ]"	<- Goto the previous comment
	 <LocalLeader>5	<- Jump to the matching tag.
	 <LocalLeader>%	<- Jump to the matching tag.
	 <LocalLeader>c	<- Rename tag
	 <LocalLeader>C	<- Rename tag and remove attributes
	 <LocalLeader>d	<- Deletes the surrounding tags from the cursor.
	 <LocalLeader>D	<- Deletes the tag and it contents
	 <LocalLeader>e	<- provide endtag for open tags.
	 <LocalLeader>f	<- fold the tag under the cursor
	 <LocalLeader>F	<- all tags of name 'tag' will be fold.
	 <LocalLeader>g	<- Format (Vim's gq function)
	 <LocalLeader>G	<- Format all tags under cursor (Vim's gq function)
	 <LocalLeader>I	<- Indent all tags
	 <LocalLeader>j	<- Joins two the SAME sections together.
	 <LocalLeader>l	<- visual surround the block with listitem and para
	 <LocalLeader>o	<- Insert a tag inside the current one (like vim o)
	 <LocalLeader>O	<- Insert a tag outside the current one (like vim O)
	 <LocalLeader>s	<- Insert an opening tag for an closing tag.
	 <LocalLeader>[	<- Delete <![CDATA[ ]]> delimiters
	 <LocalLeader>{	<- Delete <![CDATA[ ]]> section
	 <LocalLeader>]	<- Delete <!-- --> delimiters
	 <LocalLeader>}	<- Delete <!--  --> section
	 <LocalLeader>>	<- shift right opening tag and closing tag.
	 <LocalLeader><	<- shift left opening tag and closing tag.
	 <LocalLeader>c	<- Visual Place a CDATA section around the selected text.
	 <LocalLeader><	<- Visual Place a Comment around the selected text.
	 <LocalLeader>5	<- Extend the visual selection to the matching tag.
	 <LocalLeader>%	<- Extend the visual selection to the matching tag.
	 <LocalLeader>v	<- Visual Place a tag around the selected text.

COLORSCHEMES					*config-colorscheme*

4.1. peaksea					*config-peaksea*
						<url:../colors/peaksea.vim>
Best colorscheme ever! In this configuration the light background version is
used.

SYNTAX						*config-syntax*

5.1. asciidoc					*config-asciidoc*
						<url:../syntax/asciidoc.vim>
Asciidoc syntax highlighting.

5.2. bbcode					*config-bbcode*
						<url:../syntax/bbcode.vim>
Bbcode syntax highlighting.

5.3. markdown					*config-markdown*
						<url:../syntax/markdown.vim>
Markdown syntax highlighting.

5.4. |txtbrowser|				*config-txtbrowser*
Text file syntax highlighting in addition with a |taglist.txt| extension to
make text files browsable. It also contains a plugin which I disabled
(<url:../../.vimrc#txtbrowser_disabled>) for it doesn't seem to add anything
to my workflow.

vi: ft=help:tw=78:sw=8:ts=8:noet
