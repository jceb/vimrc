Index: vim/.vim/plugin/dumbbuf.vim
===================================================================
--- vim.orig/.vim/plugin/dumbbuf.vim	2010-01-28 21:37:25.000000000 +0100
+++ vim/.vim/plugin/dumbbuf.vim	2010-01-28 21:47:57.000000000 +0100
@@ -115,6 +115,8 @@
 "           :edit buffer.
 "       u
 "          open one by one. this is same as QuickBuf's u.
+"       g
+"          :sbuffer buffer.
 "       s
 "          :split buffer.
 "       v
@@ -787,6 +789,20 @@
                             \'post': ['save_lnum']}),
                         \string('v'))
             \},
+            \'g': {
+                \'opt': '<silent>',
+                \'mapto':
+                    \printf(fmt_tmp,
+                        \string('sbuffer %d'),
+                        \string({
+                            \'type': 'cmd',
+                            \'requires_args': 1,
+                            \'process_marked': 1,
+                            \'pre': ['close_return_if_empty',
+                                    \'close_dumbbuf', 'jump_to_caller'],
+                            \'post': ['save_lnum']}),
+                        \string('v'))
+            \},
             \'s': {
                 \'opt': '<silent>',
                 \'mapto':
@@ -971,6 +987,20 @@
                             \'post': ['save_lnum']}),
                         \string('n'))
             \},
+            \'g': {
+                \'opt': '<silent>',
+                \'mapto':
+                    \printf(fmt_tmp,
+                        \string('sbuffer %d'),
+                        \string({
+                            \'type': 'cmd',
+                            \'requires_args': 1,
+                            \'process_marked': 1,
+                            \'pre': ['close_return_if_empty',
+                                    \'close_dumbbuf', 'jump_to_caller'],
+                            \'post': ['save_lnum']}),
+                        \string('n'))
+            \},
             \'s': {
                 \'opt': '<silent>',
                 \'mapto':
