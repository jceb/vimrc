Index: .vim/bundle/UltiSnips/UltiSnips/python.snippets
===================================================================
--- .vim.orig/bundle/UltiSnips/UltiSnips/python.snippets
+++ .vim/bundle/UltiSnips/UltiSnips/python.snippets
@@ -5,7 +5,7 @@
 #! header
 snippet #! "Shebang header for python scripts" b
 #!/usr/bin/env python
-# encoding: utf-8
+# `!v printf("-*- coding: %s -*-", &fileencoding != "" ? &fileencoding : "utf-8")`
 $0
 endsnippet
 
@@ -460,4 +460,16 @@ class Test${1:Class}(${2:unittest.TestCa
 		${7:pass}
 endsnippet
 
+snippet argparse "Template for parsing arguments" b
+import argparse
+
+parser = argparse.ArgumentParser(description='${1:description}')
+parser.add_argument('${2:required_argument}'${3:, type=int}, nargs='${5:+}',
+                   help='${6:description for the argument}')
+#parser.add_argument('--sum', dest='accumulate', action='store_true',
+#                   help='sum the integers (default: find the max)')
+
+args = parser.parse_args()
+endsnippet
+
 # vim:ft=snippets:
Index: .vim/bundle/UltiSnips/UltiSnips/sh.snippets
===================================================================
--- .vim.orig/bundle/UltiSnips/UltiSnips/sh.snippets
+++ .vim/bundle/UltiSnips/UltiSnips/sh.snippets
@@ -28,7 +28,7 @@ esac
 endsnippet
 
 snippet elif "elif .. (elif)"
-elif ${2:[[ ${1:condition} ]]}; then
+elif ${2:[ ${1:condition} ]}; then
 	${0:#statements}
 endsnippet
 
