Index: vim/.vim/plugin/SearchComplete.vim
===================================================================
--- vim.orig/.vim/plugin/SearchComplete.vim	2008-11-29 00:03:26.000000000 +0100
+++ vim/.vim/plugin/SearchComplete.vim	2008-11-29 00:03:36.000000000 +0100
@@ -39,27 +39,33 @@
 "--------------------------------------------------
 " Key mappings
 "-------------------------------------------------- 
-noremap / :call SearchCompleteStart()<CR>/
+noremap / :call SearchCompleteStart('/')<CR>/
+noremap ? :call SearchCompleteStart('?')<CR>?
 
 
 "--------------------------------------------------
 " Set mappings for search complete
 "-------------------------------------------------- 
-function! SearchCompleteStart()
-	cnoremap <Tab> <C-C>:call SearchComplete()<CR>/<C-R>s
+function! SearchCompleteStart(dir)
+	if a:dir == '/'
+		cnoremap <Tab> <C-C>:call SearchComplete('/')<CR>/<C-R>s
+	else
+		cnoremap <Tab> <C-C>:call SearchComplete('?')<CR>?<C-R>s
+	endif
 	cnoremap <silent> <CR> <CR>:call SearchCompleteStop()<CR>
 	cnoremap <silent> <Esc> <C-C>:call SearchCompleteStop()<CR>
+	cnoremap <silent> <C-c> <C-C>:call SearchCompleteStop()<CR>
 endfunction
 
 "--------------------------------------------------
 " Tab completion in / search
 "-------------------------------------------------- 
-function! SearchComplete()
+function! SearchComplete(dir)
 	" get current cursor position
 	let l:loc = col( "." ) - 1
 	" get partial search and delete
-	let l:search = histget( '/', -1 )
-	call histdel( '/', -1 )
+	let l:search = histget( a:dir, -1 )
+	call histdel( a:dir, -1 )
 	" check if new search
 	if l:search == @s
 		" get root search string
@@ -72,11 +78,15 @@
 	endif
 	" store origional search parameter
 	let b:searchcomplete = l:search
+	let l:cpt = &cpt
+	setlocal cpt=.
+	let l:cot = &cot
+	setlocal cot=
 	" set paste option to disable indent options
 	let l:paste = &paste
 	setlocal paste
 	" on a temporary line put search string and use autocomplete
-	execute "normal! A\n" . l:search . b:searchcompletedepth
+	execute "normal! O" . l:search . b:searchcompletedepth
 	" get autocomplete result
 	let @s = getline( line( "." ) )
 	" undo and return to first char
@@ -87,6 +97,8 @@
 	endif
 	" reset paste option
 	let &paste = l:paste
+	let &cot = l:cot
+	let &cpt = l:cpt
 endfunction
 
 "--------------------------------------------------
@@ -96,5 +108,6 @@
 	cunmap <Tab>
 	cunmap <CR>
 	cunmap <Esc>
+	cunmap <C-c>
 endfunction
 
