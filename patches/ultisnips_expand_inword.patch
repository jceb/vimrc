Index: vim/.vim/plugin/UltiSnips/__init__.py
===================================================================
--- vim.orig/.vim/plugin/UltiSnips/__init__.py	2009-09-15 21:09:48.000000000 +0200
+++ vim/.vim/plugin/UltiSnips/__init__.py	2009-09-15 21:09:48.000000000 +0200
@@ -31,8 +31,12 @@
         return "b" in self._opts
     needs_ws_in_front = property(needs_ws_in_front)
 
+    def inword_expansion(self):
+        return "i" in self._opts
+    inword_expansion = property(inword_expansion)
+
     def description(self):
-        return self._d
+        return '(%s) %s' % (self._t, self._d)
     description = property(description)
 
     def trigger(self):
@@ -381,15 +385,15 @@
                 snippets = []
             snippets.append(s)
 
-        # Check if there are any only whitespace in front snippets
-        text_before = before.rstrip()[:-len(word)]
-        if text_before.strip(" \t") != '':
-            snippets = [ s for s in snippets if not s.needs_ws_in_front ]
-
         snippet = self._select_snippet (snippets)
         if not isinstance(snippet, Snippet):
             return snippet
 
+        # Check if there are any only whitespace in front snippets
+        text_before = before.rstrip()[:-len(snippet.trigger)]
+        if text_before.strip(" \t") != '':
+            snippets = [ s for s in snippets if not s.needs_ws_in_front ]
+
         return self._expand_snippet(snippet, text_before, after, lineno)
 
     def list(self):
@@ -576,8 +580,15 @@
         snips = self._snippets.get(ft,None)
         if not snips:
             return []
-
-        return snips.get(trigger, [])
+        snippets = snips.get(trigger, [])
+        if len(trigger):
+            t = trigger[1:]
+            while len(t) > 0:
+                for s in snips.get (t, []):
+                    if s.inword_expansion:
+                        snippets.append(s)
+                t = t[1:]
+        return snippets
 
 
 UltiSnips_Manager = SnippetManager()
