Index: vim/bundle/ranger/plugin/ranger.vim
===================================================================
--- vim.orig/bundle/ranger/plugin/ranger.vim
+++ vim/bundle/ranger/plugin/ranger.vim
@@ -1,24 +1,31 @@
 " forked from 
 " https://github.com/hut/ranger/blob/master/examples/vim_file_chooser.vim
 
-function! s:RangerChooser(dirname)
-    if isdirectory(a:dirname)
+function! s:RangerChooser(bang, ...)
+    if a:0 > 0
+        let dir = a:1
+    else
+        let dir = getcwd()
+    endif
+    if a:bang == '!'
+        let dir = expand('%:p:h')
+    endif
+    echom dir
+    if isdirectory(dir)
         let temp = tempname()
         if has("gui_running")
-            exec 'silent !xterm -e ranger --choosefiles=' . shellescape(temp) . ' ' . a:dirname
+            exec 'silent !x-terminal-emulator -e "ranger --choosefiles=' . shellescape(temp) . " '" . dir. "'\""
         else
-            exec 'silent !ranger --choosefiles=' . shellescape(temp) . ' ' . a:dirname
+            exec 'silent !ranger --choosefiles=' . shellescape(temp) . " '" . dir . "'"
         endif
         if !filereadable(temp)
             " close window if nothing to read, probably user closed ranger
-            close
             redraw!
             return
         endif
         let names = readfile(temp)
         if empty(names)
             " close window if nothing to open.
-            close
             redraw!
             return
         endif
@@ -34,5 +41,9 @@ function! s:RangerChooser(dirname)
     endif
 endfunction
 
-au BufEnter * silent call s:RangerChooser(expand("<amatch>"))
-let g:loaded_netrwPlugin = 'disable'
+" au BufEnter * silent call s:RangerChooser('', expand("<amatch>"))
+" let g:loaded_netrwPlugin = 'disable'
+
+command! -nargs=? -bar -bang RangerChooser :call s:RangerChooser("<bang>", <f-args>)
+nnoremap <leader>e :<C-U>RangerChooser<CR>
+nnoremap <leader>E :<C-U>RangerChooser!<CR>
