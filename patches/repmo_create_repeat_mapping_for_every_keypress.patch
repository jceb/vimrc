Index: .vim/bundle/repmo/plugin/repmo.vim
===================================================================
--- .vim.orig/bundle/repmo/plugin/repmo.vim
+++ .vim/bundle/repmo/plugin/repmo.vim
@@ -167,36 +167,42 @@ func! <sid>MapRepeatMotion(vmode, key, r
     let whitecnt = (rawkey=~'^\s$' ? "1" : "")
     exec "normal!" (cnt >= 1 ? cnt : whitecnt). rawkey
 
-    if s:lastkey != "" && s:lastkey != a:key
-	" restore "full" mapping
-	call RepmoMap(s:lastkey, s:lastrevkey)
-    endif
+    "if s:lastkey != "" && s:lastkey != a:key
+	"" restore "full" mapping
+	"call RepmoMap(s:lastkey, s:lastrevkey)
+    "endif
 
-    if cnt > 0
 	" map ";" and ","
 	let hasrepmo = 0
 	if exists("g:repmo_key") && g:repmo_key != ''
+	    if cnt > 0
 	    exec "noremap <special>" g:repmo_key cnt.a:key
+	    else
+	    exec "noremap <special>" g:repmo_key a:key
+	    endif
 	    exec "sunmap <special>" g:repmo_key
 	    let hasrepmo = 1
 	endif
 	if exists("g:repmo_revkey") && g:repmo_revkey != ''
+	    if cnt > 0
 	    exec "noremap <special>" g:repmo_revkey cnt.a:revkey
+	    else
+	    exec "noremap <special>" g:repmo_revkey a:revkey
+	    endif
 	    exec "sunmap <special>" g:repmo_revkey
 	    let hasrepmo = 1
 	endif
 	if hasrepmo
 	    call s:TransRepeatMaps()
 	endif
-    endif
 
     " map to leightweight func
-    exec "nmap <special>" a:key "<sid>lastkey"
-    exec "xmap <special>" a:key "<sid>lastkey"
+    "exec "nmap <special>" a:key "<sid>lastkey"
+    "exec "xmap <special>" a:key "<sid>lastkey"
 
-    let s:lastkey = a:key
-    let s:lastkeynorm = whitecnt. rawkey
-    let s:lastrevkey = a:revkey
+    "let s:lastkey = a:key
+    "let s:lastkeynorm = whitecnt. rawkey
+    "let s:lastrevkey = a:revkey
 
 endfunc "}}}
 func! <sid>MapRepMo(vmode) "{{{
