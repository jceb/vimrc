{
  "Sancture type definition": {
    "prefix": "typedef",
    "body": [
      "const ${1:name} = $.${2:constructor}('${3:docurl}')",
      "([${4:supertypes}])",
      "(${5:x => y => x + y});"
    ]
  },
  "Sancture function definition": {
    "prefix": "def",
    "body": [
      "const ${1:name} = def ('${1:name}')({})",
      "([${2:S.types.TYPE}])",
      "(${3:x => y => x + y});"
    ]
  },
  "Anonymous function assigned to const": {
    "prefix": "con",
    "body": [
      "const ${1:name} = (${2:parameter}) => ${3}{",
      "${4:body}",
      "};"
    ]
  },
  "Anonymous function assigned to const without body": {
    "prefix": "cons",
    "body": [
      "const ${1:name} = (${2:parameter}) => ${3:body}"
    ]
  },
  "Anonymous function": {
    "prefix": "an",
    "body": [
      "(${1:parameter}) => ${3:body}"
    ]
  },
  "Export default": {
    "prefix": "export",
    "body": [
      "export default (${1}) => {",
      "${2}",
      "}"
    ]
  },
  "Export default anonymous": {
    "prefix": "default",
    "body": [
      "export default function ${1:name}(${2}) {",
      "${3}",
      "}"
    ]
  },
  "Import logging": {
    "prefix": "importlog",
    "body": [
      "import { log } from \"@identinet/logging\";"
    ]
  },
  "Import sanctuary": {
    "prefix": "importsanctuary",
    "body": [
      "import { S } from \"@identinet/sanctuary-fluture\";"
    ]
  },
  "log()": {
    "prefix": "log",
    "body": [
      "log(\"${1}\")"
    ]
  },
  "import": {
    "prefix": "import",
    "body": [
      "import {${1}} from \"${2}\";"
    ]
  },
  "jsdoc": {
    "prefix": "jsdoc",
    "body": [
      "/**",
      " * ${1:function purpose}",
      " *",
      " * ${2}",
      " */"
    ]
  },
  "@abstract": {
    "prefix": "@abstract",
    "description": "This member must be implemented (or overridden) by the inheritor (synonyms: @virtual).",
    "body": ["@abstract"]
  },
  "@access": {
    "prefix": "@access",
    "description": "Specify the access level of this member (private, package-private, public, or protected).",
    "body": ["@access"]
  },
  "@alias": {
    "prefix": "@alias",
    "description": "Treat a member as if it had a different name.",
    "body": ["@alias"]
  },
  "@async": {
    "prefix": "@async",
    "description": "Indicate that a function is asynchronous.",
    "body": ["@async"]
  },
  "@augments": {
    "prefix": "@augments",
    "description": "Indicate that a symbol inherits from, and adds to, a parent symbol  (synonyms: @extends).",
    "body": ["@augments"]
  },
  "@author": {
    "prefix": "@author",
    "description": "Identify the author of an item.",
    "body": ["@author ${1:name} ${2:emailAddress}"]
  },
  "@borrows": {
    "prefix": "@borrows",
    "description": "This object uses something from another object.",
    "body": ["@borrows"]
  },
  "@callback": {
    "prefix": "@callback",
    "description": "A callback function.",
    "body": ["@callback"]
  },
  "@class": {
    "prefix": "@class",
    "description": "This function is intended to be called with the 'new' keyword (synonyms: @constructor).",
    "body": ["@class"]
  },
  "@classdesc": {
    "prefix": "@classdesc",
    "description": "Use the following text to describe the entire class.",
    "body": ["@classdesc"]
  },
  "@constant": {
    "prefix": "@constant",
    "description": "An object as a constant  (synonyms: @const).",
    "body": ["@constant"]
  },
  "@constructs": {
    "prefix": "@constructs",
    "description": "This function member will be the constructor for the previous class.",
    "body": ["@constructs"]
  },
  "@copyright": {
    "prefix": "@copyright",
    "description": "Some copyright information.",
    "body": ["@copyright"]
  },
  "@default": {
    "prefix": "@default",
    "description": "The default value (synonyms: @defaultvalue).",
    "body": ["@default"]
  },
  "@deprecated": {
    "prefix": "@deprecated",
    "description": "That this is no longer the preferred way.",
    "body": ["@deprecated"]
  },
  "@description": {
    "prefix": "@description",
    "description": "Describe a symbol  (synonyms: @desc).",
    "body": ["@description"]
  },
  "@enum": {
    "prefix": "@enum",
    "description": "A collection of related properties.",
    "body": ["@enum {${1:type}}"]
  },
  "@event": {
    "prefix": "@event",
    "description": "An event.",
    "body": ["@event"]
  },
  "@example": {
    "prefix": "@example",
    "description": "Provide an example of how to use a documented item.",
    "body": ["@example"]
  },
  "@exports": {
    "prefix": "@exports",
    "description": "Identify the member that is exported by a JavaScript module.",
    "body": ["@exports"]
  },
  "@external": {
    "prefix": "@external",
    "description": "Identifies an external class, namespace, or module (synonyms: @host).",
    "body": ["@external"]
  },
  "@file": {
    "prefix": "@file",
    "description": "Describe a file (synonyms: @fileoverview, @overview).",
    "body": ["@file"]
  },
  "@fires": {
    "prefix": "@fires",
    "description": "Describe the events this method may fire (synonyms: @emits).",
    "body": ["@fires"]
  },
  "@function": {
    "prefix": "@function",
    "description": "Describe a function or method (synonyms: @func, @method).",
    "body": ["@function"]
  },
  "@generator": {
    "prefix": "@generator",
    "description": "Indicate that a function is a generator function.",
    "body": ["@generator"]
  },
  "@global": {
    "prefix": "@global",
    "description": "A global object.",
    "body": ["@global"]
  },
  "@hideconstructor": {
    "prefix": "@hideconstructor",
    "description": "Indicate that the constructor should not be displayed.",
    "body": ["@hideconstructor"]
  },
  "@ignore": {
    "prefix": "@ignore",
    "description": "Omit a symbol from the documentation.",
    "body": ["@ignore"]
  },
  "@implements": {
    "prefix": "@implements",
    "description": "This symbol implements an interface.",
    "body": ["@implements"]
  },
  "@inheritdoc": {
    "prefix": "@inheritdoc",
    "description": "Indicate that a symbol should inherit its parent's documentation.",
    "body": ["@inheritdoc"]
  },
  "@inner": {
    "prefix": "@inner",
    "description": "An inner object.",
    "body": ["@inner"]
  },
  "@instance": {
    "prefix": "@instance",
    "description": "An instance member.",
    "body": ["@instance"]
  },
  "@interface": {
    "prefix": "@interface",
    "description": "This symbol is an interface that others can implement.",
    "body": ["@interface"]
  },
  "@kind": {
    "prefix": "@kind",
    "description": "What kind of symbol is this?",
    "body": ["@kind"]
  },
  "@lends": {
    "prefix": "@lends",
    "description": "Properties on an object literal as if they belonged to a symbol with a given name.",
    "body": ["@lends"]
  },
  "@license": {
    "prefix": "@license",
    "description": "Identify the license that applies to this code.",
    "body": ["@license"]
  },
  "@listens": {
    "prefix": "@listens",
    "description": "List the events that a symbol listens for.",
    "body": ["@listens"]
  },
  "@member": {
    "prefix": "@member",
    "description": "A member (synonyms: @var).",
    "body": ["@member"]
  },
  "@memberof": {
    "prefix": "@memberof",
    "description": "This symbol belongs to a parent symbol.",
    "body": ["@memberof"]
  },
  "@mixes": {
    "prefix": "@mixes",
    "description": "This object mixes in all the members from another object.",
    "body": ["@mixes"]
  },
  "@mixin": {
    "prefix": "@mixin",
    "description": "A mixin object.",
    "body": ["@mixin"]
  },
  "@module": {
    "prefix": "@module",
    "description": "A JavaScript module.",
    "body": ["@module"]
  },
  "@name": {
    "prefix": "@name",
    "description": "The name of an object.",
    "body": ["@name"]
  },
  "@namespace": {
    "prefix": "@namespace",
    "description": "A namespace object.",
    "body": ["@namespace"]
  },
  "@override": {
    "prefix": "@override",
    "description": "Indicate that a symbol overrides its parent.",
    "body": ["@override"]
  },
  "@package": {
    "prefix": "@package",
    "description": "This symbol is meant to be package-private.",
    "body": ["@package"]
  },
  "@param": {
    "prefix": "@param",
    "description": "The parameter to a function (synonyms: @arg, @argument).",
    "body": ["@param {${1:type}} ${2:variable} - ${3:description}."]
  },
  "@private": {
    "prefix": "@private",
    "description": "This symbol is meant to be private.",
    "body": ["@private"]
  },
  "@property": {
    "prefix": "@property",
    "description": "A property of an object  (synonyms: @prop).",
    "body": ["@property {${1:type}} ${2:property} ${3:description}"]
  },
  "@protected": {
    "prefix": "@protected",
    "description": "This symbol is meant to be protected.",
    "body": ["@protected"]
  },
  "@public": {
    "prefix": "@public",
    "description": "This symbol is meant to be public.",
    "body": ["@public"]
  },
  "@readonly": {
    "prefix": "@readonly",
    "description": "This symbol is meant to be read-only.",
    "body": ["@readonly"]
  },
  "@requires": {
    "prefix": "@requires",
    "description": "This file requires a JavaScript module.",
    "body": ["@requires"]
  },
  "@returns": {
    "prefix": "@returns",
    "description": "The return value of a function (synonyms: @return).",
    "body": ["@returns {${1:type}} ${2:description}"]
  },
  "@see": {
    "prefix": "@see",
    "description": "Refer to some other documentation for more information.",
    "body": ["@see"]
  },
  "@since": {
    "prefix": "@since",
    "description": "When was this feature added?",
    "body": ["@since"]
  },
  "@static": {
    "prefix": "@static",
    "description": "A static member.",
    "body": ["@static"]
  },
  "@summary": {
    "prefix": "@summary",
    "description": "A shorter version of the full description.",
    "body": ["@summary"]
  },
  "@this": {
    "prefix": "@this",
    "description": "What does the 'this' keyword refer to here?",
    "body": ["@this"]
  },
  "@throws": {
    "prefix": "@throws",
    "description": "Describe what errors could be thrown (synonyms: @exception).",
    "body": ["@throws"]
  },
  "@todo": {
    "prefix": "@todo",
    "description": "Tasks to be completed.",
    "body": ["@todo ${1:task}"]
  },
  "@tutorial": {
    "prefix": "@tutorial",
    "description": "Insert a link to an included tutorial file.",
    "body": ["@tutorial"]
  },
  "@type": {
    "prefix": "@type",
    "description": "The type of an object. See https://jsdoc.app/tags-type.html",
    "body": ["/** @type {${1}} */"]
  },
  "@typedef": {
    "prefix": "@typedef",
    "description": "A custom type.",
    "body": ["@typedef {${1:type}} ${2:name}"]
  },
  "@variation": {
    "prefix": "@variation",
    "description": "Distinguish different objects with the same name.",
    "body": ["@variation"]
  },
  "@version": {
    "prefix": "@version",
    "description": "The version number of an item.",
    "body": ["@version"]
  },
  "@yields": {
    "prefix": "@yields",
    "description": "The value yielded by a generator function (synonyms: @yield).",
    "body": ["@yields"]
  },
  "@link": {
    "prefix": "@link",
    "description": "Link to another item in the documentation (synonyms: {@linkcode}, {@linkplain}).",
    "body": ["@link ${1:target}"]
  }
}
