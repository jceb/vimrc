{
  "Sancture type definition": {
    "prefix": "typedef",
    "body": [
      "const ${1:name} = $.${2:constructor}('${3:docurl}')",
      "([${4:supertypes}])",
      "(${5:x => y => x + y});"
    ]
  },
  "Sancture function definition": {
    "prefix": "def",
    "body": [
      "const ${1:name} = def ('${1:name}')({})",
      "([${2:S.types.TYPE}])",
      "(${3:x => y => x + y});"
    ]
  },
  "Anonymous function assigned to const": {
    "prefix": "con",
    "body": [
      "const ${1:name} = (${2:parameter}) => ${3}{",
      "${4:body}",
      "};"
    ]
  },
  "Anonymous function assigned to const without body": {
    "prefix": "cons",
    "body": [
      "const ${1:name} = (${2:parameter}) => ${3:body}"
    ]
  },
  "Anonymous function": {
    "prefix": "an",
    "body": [
      "(${1:parameter}) => ${3:body}"
    ]
  },
  "Export default": {
    "prefix": "export",
    "body": [
      "export default (${1}) => {",
      "${2}",
      "}"
    ]
  },
  "Export default anonymous": {
    "prefix": "default",
    "body": [
      "export default function ${1:name}(${2}) {",
      "${3}",
      "}"
    ]
  },
  "Import logging": {
    "prefix": "importlog",
    "body": [
      "import { log } from \"@identinet/logging\";"
    ]
  },
  "Import sanctuary": {
    "prefix": "importsanctuary",
    "body": [
      "import { S } from \"@identinet/sanctuary-fluture\";"
    ]
  },
  "log()": {
    "prefix": "log",
    "body": [
      "log(\"${1}\")"
    ]
  },
  "import": {
    "prefix": "import",
    "body": [
      "import {${1}} from \"${2}\";"
    ]
  }
}
