{
  "Template Nu": {
    "prefix": "template-nu",
    "body": [
      "#!/usr/bin/env just --justfile",
      "# Documentation: https://just.systems/man/en/",
      "",
      "set shell := ['nu', '-c']",
      "",
      "# Integration with nodejs package.json scripts, see https://just.systems/man/en/chapter_65.html",
      "",
      "export PATH := env('PWD') / 'node_modules/.bin:' + env('PATH')",
      "",
      "# To override the value of SOME_VERSION, run: just --set SOME_VERSION 1.2.4 TARGET_NAME",
      "",
      "SOME_VERSION := '1.2.3'",
      "",
      "# Print this help",
      "default:",
      "    @just -l",
      "",
      "# Format Justfile",
      "format:",
      "    @just --fmt --unstable",
      "",
      "# Install git commit hooks",
      "githooks:",
      "    #!/usr/bin/env nu",
      "    let hooks_folder = '.githooks'",
      "    if (git config core.hooksPath) != $hooks_folder {",
      "      print 'Installing git commit hooks'",
      "      mkdir $hooks_folder",
      "      git config core.hooksPath $hooks_folder",
      "    }",
      "    if not ($hooks_folder | path exists) {",
      "      \"#!/usr/bin/env sh\nset -eu\necho 'ERROR: customize this git commit hook.'\nexit 1\" | save $\"($hooks_folder)/pre-commit\"",
      "      chmod 755 $\"($hooks_folder)/pre-commit\"",
      "      git add $hooks_folder",
      "    }",
      "",
      "# Install application",
      "install:",
      "    # todo",
      "",
      "# Run and watch application for development purposes",
      "dev:",
      "    cargo watch -x run",
      "",
      "# Build application",
      "build:",
      "    cargo build --release",
      "",
      "# Test application",
      "test tests='':",
      "    cargo test {{ tests }}",
      "",
      "# Development test application",
      "dev-test tests='':",
      "    cargo watch -x 'test {{ tests }}'",
      "",
      "# Clean files",
      "clean:",
      "    rm -rvf target/"
    ]
  },
  "Template Bash": {
    "prefix": "template-bash",
    "body": [
      "#!/usr/bin/env just --justfile",
      "# Documentation: https://just.systems/man/en/",
      "",
      "set shell := ['bash', '-euo', 'pipefail', '-c']",
      "",
      "# Integration with nodejs package.json scripts, see https://just.systems/man/en/chapter_65.html",
      "",
      "export PATH := env('PWD') / 'node_modules/.bin:' + env('PATH')",
      "",
      "# To override the value of SOME_VERSION, run: just --set SOME_VERSION 1.2.4 TARGET_NAME",
      "",
      "SOME_VERSION := '1.2.3'",
      "",
      "# Print this help",
      "default:",
      "    @just -l",
      "",
      "# Format Justfile",
      "format:",
      "    @just --fmt --unstable",
      "",
      "# Install git commit hooks",
      "githooks:",
      "    #!/usr/bin/env nu",
      "    let hooks_folder = '.githooks'",
      "    if (git config core.hooksPath) != $hooks_folder {",
      "      print 'Installing git commit hooks'",
      "      mkdir $hooks_folder",
      "      git config core.hooksPath $hooks_folder",
      "    }",
      "    if not ($hooks_folder | path exists) {",
      "      \"#!/usr/bin/env sh\nset -eu\necho 'ERROR: customize this git commit hook.'\nexit 1\" | save $\"($hooks_folder)/pre-commit\"",
      "      chmod 755 $\"($hooks_folder)/pre-commit\"",
      "      git add $hooks_folder",
      "    }",
      "",
      "# Install application",
      "install:",
      "    # todo",
      "",
      "# Run and watch application for development purposes",
      "dev:",
      "    cargo watch -x run",
      "",
      "# Build application",
      "build:",
      "    cargo build --release",
      "",
      "# Test application",
      "test tests='':",
      "    cargo test {{ tests }}",
      "",
      "# Development test application",
      "dev-test tests='':",
      "    cargo watch -x 'test {{ tests }}'",
      "",
      "# Clean files",
      "clean:",
      "    rm -rvf target/"
    ]
  }
}
