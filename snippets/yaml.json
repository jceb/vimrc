{
  "template-prettier": {
    "prefix": "template-prettier",
    "body": [
      "# Documentation: https://prettier.io/docs/en/options",
      "",
      "proseWrap: always",
      "printWidth: 120"
    ]
  },
  "kustomization": {
    "prefix": "kustomization",
    "body": [
      "# Documentation: https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/",
      "apiVersion: kustomize.config.k8s.io/v1beta1",
      "kind: Kustomization",
      "",
      "resources:",
      "  - xxx"
    ]
  },
  "component": {
    "prefix": "component",
    "body": [
      "# Documentation: https://kubectl.docs.kubernetes.io/guides/config_management/components/",
      "apiVersion: kustomize.config.k8s.io/v1alpha1",
      "kind: Component",
      "",
      "resources:",
      "  - xxx",
      "",
      "patches:",
      "  - target:",
      "      version: v1",
      "      kind: ConfigMap",
      "      name: xyz",
      "    patch: |-",
      "      - op: replace",
      "        path: /xxx",
      "        value: |",
      "          data"
    ]
  },
  "fluxkustomization": {
    "prefix": "fluxkustomization",
    "body": [
      "# Documentation: https://fluxcd.io/docs/components/kustomize/kustomization/",
      "apiVersion: apiVersion: kustomize.toolkit.fluxcd.io/v1beta1",
      "kind: Kustomization",
      "",
      "spec:",
      "  decryption:",
      "    provider: sops",
      "    secretRef:",
      "      name: sops-gpg",
      "  interval: 10m",
      "  path: './dev'",
      "  prune: true",
      "  # wait: true # FIXME: enable with new version of fluxcd",
      "  sourceRef:",
      "    kind: GitRepository",
      "    name: helm-charts"
    ]
  },
  "k-namespace": {
    "prefix": "k-namespace",
    "body": [
      "# Documentation: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
      "apiVersion: v1",
      "kind: Namespace",
      "metadata:",
      "  name: ${1:namespace}"
    ]
  },
  "k-role": {
    "prefix": "k-role",
    "body": [
      "# Documentation: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#role-example",
      "apiVersion: rbac.authorization.k8s.io/v1",
      "kind: Role",
      "metadata:",
      "  name: ${1:name}",
      "  namespace: ${2:namespace}",
      "rules:",
      "- apiGroups: [\"\"] # \"\" indicates the core API group",
      "  resources: [\"pods\"]",
      "  verbs: [\"get\", \"watch\", \"list\"]"
    ]
  },
  "k-clusterrole": {
    "prefix": "k-clusterrole",
    "body": [
      "# Documentation: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#clusterrole-example",
      "apiVersion: rbac.authorization.k8s.io/v1",
      "kind: ClusterRole",
      "metadata:",
      "  name: ${1:name}",
      "rules:",
      "- apiGroups: [\"\"]",
      "  resources: [\"pods\"]",
      "  verbs: [\"get\", \"watch\", \"list\"]"
    ]
  },
  "k-rolebinding": {
    "prefix": "k-rolebinding",
    "body": [
      "# Documentation: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-example",
      "apiVersion: rbac.authorization.k8s.io/v1",
      "kind: RoleBinding",
      "metadata:",
      "  name: ${1:name}",
      "  namespace: ${2:namespace}",
      "subjects:",
      "- kind: User",
      "  name: jane",
      "  apiGroup: rbac.authorization.k8s.io",
      "roleRef:",
      "  kind: Role",
      "  name: pod-reader",
      "  apiGroup: rbac.authorization.k8s.io"
    ]
  },
  "k-clusterrolebinding": {
    "prefix": "k-clusterrolebinding",
    "body": [
      "# Documentation: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#clusterrolebinding-example",
      "apiVersion: rbac.authorization.k8s.io/v1",
      "kind: ClusterRoleBinding",
      "metadata:",
      "  name: ${1:name}",
      "subjects:",
      "- kind: User",
      "  name: jane",
      "  apiGroup: rbac.authorization.k8s.io",
      "roleRef:",
      "  kind: ClusterRole",
      "  name: pod-reader",
      "  apiGroup: rbac.authorization.k8s.io"
    ]
  },
  "k-networkpolicy": {
    "prefix": "k-networkpolicy",
    "body": [
      "# Documentation: https://kubernetes.io/docs/concepts/services-networking/network-policies/",
      "apiVersion: networking.k8s.io/v1",
      "kind: NetworkPolicy",
      "metadata:",
      "  name: ${1:test-network-policy}",
      "  namespace: ${1:test-network-policy}",
      "spec:",
      "  podSelector:",
      "    matchLabels:",
      "      app: ${1:test-network-policy}",
      "  policyTypes:",
      "    - Ingress",
      "  ingress:",
      "    - from:",
      "        - ipBlock:",
      "            cidr: 172.17.0.0/16",
      "            except:",
      "              - 172.17.1.0/24",
      "        - namespaceSelector:",
      "            matchLabels:",
      "              project: ${1:test-network-policy}",
      "        - podSelector:",
      "            matchLabels:",
      "              app: test-pod",
      "      ports:",
      "        - protocol: TCP",
      "          port: 80"
    ]
  }
}
